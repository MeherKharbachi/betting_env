# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/Utils/02_asian_handicap_1x2_pnl.ipynb.

# %% auto 0
__all__ = ['pnl_1X2', 'pnl_ah']

# %% ../../nbs/Utils/02_asian_handicap_1x2_pnl.ipynb 3
import numexpr
import numpy as np
import mongoengine
import pandas as pd

# %% ../../nbs/Utils/02_asian_handicap_1x2_pnl.ipynb 14
def pnl_1X2(
    bet: list,  # The betting list (5 ints) for the provided action.
    balance: float,  # Current account balance.
    results: np.ndarray,  # Game result (Binary side outcome), shape=(1,5).
    odds: np.ndarray,  # odds for the current game, shape=(1,5)
) -> float: # 1X2 PnL
    "Returns the 1X2 PnL."
    # reward(could be positive or negative)
    reward = numexpr.evaluate("sum(bet * balance * results * odds)")
    # Invested money
    expense = numexpr.evaluate("sum(bet * balance)")
    # return pnl
    return reward - expense

# %% ../../nbs/Utils/02_asian_handicap_1x2_pnl.ipynb 19
def pnl_ah(
    bet: list,  # The betting list (5 ints) for the provided action.
    balance,  # Current account balance.
    obs_gd: int,  # Game goal-difference.
    ah_line: float,  # Asian line could be integer, half or quarter line.
    ah_odds: float,  # Asian handicap odds for the given side.
) -> float:  # Asian Handicap PnL.
    "Returns the Asian Handicap PnL"
    def _pnl_ah(obs_gd, ah_line, ah_odds):
        "provides the asian outcome given for a unit bet."
        # Team advantage.
        gd_advantage = obs_gd + ah_line

        # Deal with all advantage cases.
        # 0 advantage.
        if gd_advantage == 0:
            return 0.0
        # Positive adv and higher than 0.5.
        # Win the bet.
        elif gd_advantage >= 0.5:
            return ah_odds - 1
        # Negative adv and < than -0.5.
        # Lose the bet.
        elif gd_advantage <= -0.5:
            return -1.0

        # Positive adv and equal to 0.25.
        # Win the half.
        elif gd_advantage == 0.25:
            return (ah_odds - 1) * 0.5

        # Positive adv and equal to -0.25.
        # Lose the half stake of your bets.
        elif gd_advantage == -0.25:
            return -0.5
        # Can't compute Asian Pnl for the observed handicap.
        else:
            return 0.0

    # Calculate profit for a unit bet.
    profit = _pnl_ah(obs_gd, ah_line, ah_odds)
    # Return pnl for the invested amount.
    return numexpr.evaluate("sum(bet * balance * profit)").item()
